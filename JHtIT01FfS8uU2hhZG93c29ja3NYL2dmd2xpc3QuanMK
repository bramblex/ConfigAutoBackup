// Update At 2016-09-29 20:49:57;

var proxy = "SOCKS5 127.0.0.1:1080; SOCKS 127.0.0.1:1080; DIRECT;";

var rules = {
    "amazonaws.com": true,
    "phonegap.com": true,
    "wordpress.com": true,
    "google.com": true,
    "gmail.com": true,
    "gstatic.com": true,
    "googleusercontent.com": true,
    "googleapis.com": true,
    "goo.gl": true,
    "googlecode.com": true,
    "google-analytics.com": true,
    "googlevideo.com": true,
    "youtube.com": true,
    "ytimg.com": true,
    "ggpht.com": true,
    "facebook.com": true,
    "facebook.net": true,
    "akamaihd.net": true,
    "wikipedia.org": true,
    "redtube.com": true,
    "live.com": true,
    "dropbox.com": true,
    "sourceforge.net": true,
    "github.com": true,
    "github.io": true,
    "githubusercontent.com": true,
    "disqus.com": true,
    "w.org": true,
    "twitter.com": true,
    "twimg.com": true,
    "eurekavpt.com": true,
    "teamviewer.com": true,
    "reddit.com": true,
    "redditstatic.com": true,
    "redditmedia.com": true,
    "pastie.org": true,
    "haskell.org": true,
    "npmjs.com": true,
    "pixnet.net": true,
    "cilibaba.net": true,
    "cloudfront.net": true,
    "tampermonkey.net": true,
    "stackoverflow.com": true,
    "leetcode.com": true,
    "slideshare.net": true,
    "googletagservices.com": true,
    "doubleclick.net": true,
    "hola.org": true,
    "google.co.jp": true,
    "google.com.hk": true,
    "livecoding.tv": true,
    "sequelizejs.com": true,
    "91zll.com": true,
    "123systems.net": true,
    "jetbrains.com": true
};

var getRootDomain =function (url){
    var subdomian_map = {"com":true, "org":true, "net":true, "edu":true, "gov":true, "ac":true, "co":true}
    var domian_list = url.match(/^(https?\:\/\/|)([^\/?#]+)(?:[\/?#]|$)/i)[2].split('.');
    return subdomian_map[domian_list[domian_list.length-2]]
        ? domian_list.slice(-3).join('.')
        : domian_list.slice(-2).join('.');
};

var FindProxyForURL = function FindProxyForURL(url, host) {
    var root_domain = getRootDomain(url);
    return rules[root_domain] ? proxy : 'DIRECT;';
};

var runIfNode = function (){
    if (typeof module !== 'undefined' && module.exports){
        var command = process.argv[2];
        var argument = process.argv[3];

        var access_command = ['list', 'set', 'add', 'rm'];

        if (access_command.indexOf(command) >= 0){
            if (command === 'list'){
                Object
                    .keys(rules)
                    .sort()
                    .forEach(function(rule){console.log(rule);});
                return;
            } else if (command === 'set'){
                proxy = argument;
            } else if (command === 'add'){
                rules[getRootDomain(argument)] = true;
                console.log('add', getRootDomain(argument));
            } else if (command === 'rm'){
                delete rules[getRootDomain(argument)];
                console.log('rm', getRootDomain(argument));
            }
        } else {
            console.log(
                [
                    '\n',
                    'Usage: ',
                    '\tlist: list all rules',
                    '\tset <proxy>: set current proxy',
                    '\tadd <root domain>: add root domian rule',
                    '\trm <root domain>: remove root domian',
                    '\n',
                    'Example: ',
                    '\tset "SOCKS5 127.0.0.1:1080;"',
                    '\tadd google.com',
                    '\n'
                ].join('\n')
            );
            process.exit(1);
        }

        var date_comment = '// Update At ' + (new Date()).toLocaleString();
        var proxy_define = 'var proxy = ' + JSON.stringify(proxy);
        var rules_define = 'var rules = ' + JSON.stringify(rules, null, 4);
        var getRootDomain_define = 'var getRootDomain =' + getRootDomain.toString();
        var FindProxyForURL_define = 'var FindProxyForURL = ' + FindProxyForURL.toString();
        var runIfNode_define = 'var runIfNode = ' + runIfNode.toString();
        var code = [
            date_comment,
            proxy_define,
            rules_define,
            getRootDomain_define,
            FindProxyForURL_define,
            runIfNode_define,
            'runIfNode()'
        ].join(';\n\n') + ';';

        require('fs').writeFileSync(__filename, code, 'utf8');
    }
};

runIfNode();