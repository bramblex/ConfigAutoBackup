var proxy = "SOCKS5 127.0.0.1:1080; SOCKS 127.0.0.1:1080; DIRECT;";

var rules = {
    "amazonaws.com": true,
    "phonegap.com": true,
    "9truezll.com": true,
    "wordpress.com": true,
    "google.com": true,
    "co.jp": true,
    "com.hk": true,
    "gmail.com": true,
    "gstatic.com": true,
    "googleusercontent.com": true,
    "googleapis.com": true,
    "goo.gl": true,
    "googlecode.com": true,
    "google-analytics.com": true,
    "googlevideo.com": true,
    "youtube.com": true,
    "ytimg.com": true,
    "ggpht.com": true,
    "facebook.com": true,
    "facebook.net": true,
    "akamaihd.net": true,
    "wikipedia.org": true,
    "redtube.com": true,
    "live.com": true,
    "dropbox.com": true,
    "sourceforge.net": true,
    "github.com": true,
    "github.io": true,
    "githubusercontent.com": true,
    "disqus.com": true,
    "w.org": true,
    "twitter.com": true,
    "twimg.com": true,
    "eurekavpt.com": true,
    "teamviewer.com": true,
    "reddit.com": true,
    "redditstatic.com": true,
    "redditmedia.com": true,
    "pastie.org": true,
    "haskell.org": true,
    "npmjs.com": true,
    "pixnet.net": true,
    "cilibaba.net": true,
    "cloudfront.net": true,
    "tampermonkey.net": true,
    "stackoverflow.com": true,
    "leetcode.com": true,
    "baidu.com": true,
    "slideshare.net": true,
    "googletagservices.com": true,
    "doubleclick.net": true
};

var FindProxyForURL = function FindProxyForURL(url, host) {
    var rootDomain = url.match(/^https?\:\/\/([^\/?#]+)(?:[\/?#]|$)/i)[1].split('.').slice(-2).join('.');
    return rules[rootDomain] ? proxy : 'DIRECT;';
};

var runNode = function (){
    if (typeof module !== 'undefined' && module.exports){
        var command = process.argv[2];
        var argument = process.argv[3];

        var access_command = ['list', 'set', 'add', 'rm'];

        if (access_command.indexOf(command) >= 0){
            if (command === 'list'){
                Object
                    .keys(rules)
                    .sort()
                    .forEach(function(rule){console.log(rule);});
                return;
            } else if (command === 'set'){
                proxy = argument;
            } else if (command === 'add'){
                rules[argument] = true;
            } else if (command === 'rm'){
                delete rules[argument];
            }
        } else {
            console.log(
                [
                    '\n',
                    'Usage: ',
                    '\tlist: list all rules',
                    '\tset <proxy>: set current proxy',
                    '\tadd <root domain>: add root domian rule',
                    '\trm <root domain>: remove root domian',
                    '\n',
                    'Example: ',
                    '\tset "SOCKS5 127.0.0.1:1080;"',
                    '\tadd google.com',
                    '\n'
                ].join('\n')
            );
            process.exit(1);
        }

        var proxy_define = 'var proxy = ' + JSON.stringify(proxy);
        var rules_define = 'var rules = ' + JSON.stringify(rules, null, 4);
        var FindProxyForURL_define = 'var FindProxyForURL = ' + FindProxyForURL.toString();
        var runNode_define = 'var runNode = ' + runNode.toString();
        var code = [proxy_define, rules_define, FindProxyForURL_define, runNode_define, 'runNode()'].join(';\n\n') + ';';

        require('fs').writeFileSync(__filename, code, 'utf8');
    }
};

runNode();